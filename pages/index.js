import Head from 'next/head'
import Image from 'next/image'
import styles from '../styles/Home.module.css'
import { useState, useReducer } from 'react'
import Board from '../components/Board'
import getAdjacent from '../funcs/getAdjacent'


export default function Home() {

  function reducer(state,action){
    switch(action.type){
      case 'changeNumber':
        return {...state, [action.field]:action.value}
      case 'newGame':
        let minePositions = [];
        let gridSize = state.width*state.height
        while (minePositions.length < state.mines){
          let position = Math.floor((Math.random()*gridSize))
          if(!minePositions.includes(position)){
            minePositions.push(position)
          }  
        }
        let gameGrid = [];
        for (let i = 0; i < state.height; i++){
          let row = [];
          for (let j = 0; j < state.width; j++){
            row.push(false)
          }
          gameGrid.push(row)
        }
        for (let i = 0; i < minePositions.length; i++){
          let position = minePositions[i]
          let rowPosition = Math.floor((position) / state.width);
          let columnPosition = position % state.width;
          gameGrid[rowPosition][columnPosition] = 'M'
        }
        let game = getAdjacent(gameGrid)
        return {...state, game:game}
      default:
        return state
    }
  }

  const [state,dispatch] = useReducer(reducer,{width: 3, height: 3, mines: 3,game:[['M',2,1],[3,'M',2],[2,'M',2]]})

  function handleChange(e){
    dispatch({
      type:'changeNumber',
      field: e.target.name,
      value: e.target.value
    })
  }

  return (
    <div className={styles.container}>
      <Head>
        <title>Minesweeper</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <Board gameBoard={state.game}></Board>
        <div className='settings'>
          <label>Width: </label>
          <input type='number' min={3} max={15} name='width' value={state.width} onChange={(e)=>handleChange(e)}/>
          <label>Height: </label>
          <input type='number' min={3} max={15} name='height' value={state.height} onChange={(e)=>handleChange(e)}/>
          <label>Mines: </label>
          <input type='number' min={3} max={Math.floor((state.width * state.height)/2)} name='mines' value={state.mines} onChange={(e)=>handleChange(e)}/>
        </div>
        <button onClick={()=>{dispatch({type:'newGame'})}}>New Game</button>
      </main>

      <footer className={styles.footer}>
        <a
          href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
          target="_blank"
          rel="noopener noreferrer"
        >
          Powered by{' '}
          <span className={styles.logo}>
            <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
          </span>
        </a>
      </footer>
    </div>
  )
}
